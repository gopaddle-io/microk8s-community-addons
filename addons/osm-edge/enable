#!/usr/bin/env bash

set -e

source $SNAP/actions/common/utils.sh
CURRENT_DIR=$(cd $(dirname "${BASH_SOURCE[0]}") && pwd)

read -ra ARGUMENTS <<< "$@"

ARCH=$(arch)

# check if osm-edge cli is already in the system.  Download if it doesn't exist.
if [ ! -f "${SNAP_DATA}/bin/osm" ]; then
  OSM_EDGE_VERSION="${OSM_EDGE_VERSION:-v1.1.2}"
  echo "Fetching osm-edge version $OSM_EDGE_VERSION."

  run_with_sudo mkdir -p "${SNAP_DATA}/tmp/osm-edge"
  (cd "${SNAP_DATA}/tmp/osm-edge"
  fetch_as https://github.com/flomesh-io/osm-edge/releases/download/${OSM_EDGE_VERSION}/osm-edge-${OSM_EDGE_VERSION}-linux-${ARCH}.tar.gz "$SNAP_DATA/tmp/osm-edge/osm-edge.tar.gz"
  run_with_sudo gzip -q -d "$SNAP_DATA/tmp/osm-edge/osm-edge.tar.gz"
  run_with_sudo tar --no-overwrite-dir --no-same-owner -mxvf "$SNAP_DATA/tmp/osm-edge/osm-edge.tar")
  run_with_sudo mkdir -p "$SNAP_DATA/bin/"
  run_with_sudo mv "$SNAP_DATA/tmp/osm-edge/linux-${ARCH}/osm" "$SNAP_DATA/bin/"
  run_with_sudo chmod uo+x "$SNAP_DATA/bin/osm"

  run_with_sudo rm -rf "$SNAP_DATA/tmp/osm-edge"
fi

echo "Enabling osm-edge"
# enable dns service
"$SNAP/microk8s-enable.wrapper" dns
# Allow some time for the apiserver to start
${SNAP}/microk8s-status.wrapper --wait-ready --timeout 30 >/dev/null

OSM_MESH_NAME=${OSM_MESH_NAME:-"osm"}
OSM_MESH_NS=${OSM_NAMESPACE:-"osm-system"}

if [ ! -z "$#"  ]
then
  echo "Installing osm-edge"
  KUBECONFIG=$SNAP_DATA/credentials/client.config $SNAP_DATA/bin/osm install ${ARGUMENTS[@]}
else
  echo "Installing osm-edge with default settings"
  KUBECONFIG=$SNAP_DATA/credentials/client.config $SNAP_DATA/bin/osm install --mesh-name "$OSM_MESH_NAME" \
    --osm-namespace "$OSM_MESH_NS" \
    --set=osm.enablePermissiveTrafficPolicy=true
fi

# add custom command

if [ ! -f "${SNAP_COMMON}/plugins/osm" ]; then
  run_with_sudo mkdir -p "${SNAP_COMMON}/plugins"
  run_with_sudo cp "$CURRENT_DIR/osm.wrapper" "${SNAP_COMMON}/plugins/osm"
  run_with_sudo chmod uo+x "${SNAP_COMMON}/plugins/osm"
fi

echo "osm-edge is enabled"
